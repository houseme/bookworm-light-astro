---
import Base from "@/layouts/Base.astro";
import Posts from "@/layouts/Posts.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { getTaxonomy } from "@/lib/taxonomyParser.astro";
import { sortByDate } from "@/lib/utils/sortFunctions";
import taxonomyFilter from "@/lib/utils/taxonomyFilter";
import { humanize } from "@/lib/utils/textConverter";
import config from "@/config/config.json";
import Pagination from "@/layouts/components/Pagination.astro";

export async function getStaticPaths() {
  const tags = await getTaxonomy("posts", "tags");
  const posts = await getSinglePage("posts");
  const paths = [];

  for (const tag of tags) {
    const filterByTag = taxonomyFilter(posts, "tags", tag);
    const totalPages = Math.ceil(filterByTag.length / (config.settings.pagination+1));
    for (let page = 2; page <= totalPages; page++) {
      paths.push({ params: { tag, page: String(page) } });
    }
  }
  return paths;
}

const { tag, page } = Astro.params;

const posts = await getSinglePage("posts");
const filterByTag = taxonomyFilter(posts, "tags", tag);
const sortedPosts = sortByDate(filterByTag);

const title = humanize(tag || "");
const pageNum = Number(page);
const pageSize = config.settings.pagination + 1;
const pagedPosts = sortedPosts.slice((pageNum - 1) * pageSize, pageNum * pageSize);
const totalPages = Math.ceil(sortedPosts.length / config.settings.pagination);
---

<Base title={title +" Tags - Rust 编程教程 - 学习 Rust 编程语言的最佳资源和教程"}>
  <div class="section">
    <div class="container">
      <p class="text-center text-2xl mb-4">Showing Posts From</p>
      <h1 class="h2 mb-16 text-center text-primary">{title}</h1>
      <Posts posts={pagedPosts} fluid={false} />
      <Pagination section={`tags/${tag}`} currentPage={pageNum} totalPages={totalPages} />
    </div>
  </div>
</Base>
